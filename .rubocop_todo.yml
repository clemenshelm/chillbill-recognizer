# This configuration was generated by
# `rubocop --auto-gen-config`
# on 2017-01-02 13:07:54 +0100 using RuboCop version 0.46.0.
# The point is for the user to remove these configuration records
# one by one as the offenses are removed from the code base.
# Note that changes in the inspected code, or installation of new
# versions of RuboCop, may require this file to be generated again.

# Offense count: 4
# Configuration parameters: Include.
# Include: **/Gemfile, **/gems.rb
Bundler/OrderedGems:
  Exclude:
    - 'Gemfile'

# Offense count: 1
Lint/NestedMethodDefinition:
  Exclude:
    - 'lib/logging.rb'

# Offense count: 1
Lint/NonLocalExitFromIterator:
  Exclude:
    - 'lib/calculations/price_calculation.rb'

# Offense count: 1
# Cop supports --auto-correct.
Lint/PercentStringArray:
  Exclude:
    - 'spec/detectors/price_detector_spec.rb'

# Offense count: 8
Metrics/AbcSize:
  Max: 107

# Offense count: 1
# Configuration parameters: CountComments.
Metrics/BlockLength:
  Max: 27

# Offense count: 1
# Configuration parameters: CountComments.
Metrics/ClassLength:
  Max: 127

# Offense count: 3
Metrics/CyclomaticComplexity:
  Max: 10

# Offense count: 1
# Configuration parameters: AllowHeredoc, AllowURI, URISchemes, IgnoreCopDirectives, IgnoredPatterns.
# URISchemes: http, https
Metrics/LineLength:
  Max: 82

# Offense count: 21
# Configuration parameters: CountComments.
Metrics/MethodLength:
  Max: 108

# Offense count: 1
Metrics/PerceivedComplexity:
  Max: 8

# Offense count: 2
# Cop supports --auto-correct.
Style/MultilineIfModifier:
  Exclude:
    - 'lib/bill_recognizer.rb'
    - 'lib/calculations/date_calculation.rb'

# Offense count: 5
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: require_no_space, require_space
Style/SpaceInLambdaLiteral:
  Exclude:
    - 'lib/detectors/billing_end_label_detector.rb'
    - 'lib/detectors/billing_start_label_detector.rb'
    - 'lib/detectors/date_detector.rb'
    - 'lib/detectors/due_date_label_detector.rb'
    - 'lib/detectors/price_detector.rb'
